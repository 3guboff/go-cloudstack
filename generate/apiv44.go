//
// Copyright 2014, Sander van Harmelen
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package main

var v44 = apiInfo{
	"LoadBalancerService": {
		"createLoadBalancerRule",
		"deleteLoadBalancerRule",
		"removeFromLoadBalancerRule",
		"assignToLoadBalancerRule",
		"createLBStickinessPolicy",
		"updateLBStickinessPolicy",
		"deleteLBStickinessPolicy",
		"listLoadBalancerRules",
		"listLBStickinessPolicies",
		"listLBHealthCheckPolicies",
		"createLBHealthCheckPolicy",
		"updateLBHealthCheckPolicy",
		"deleteLBHealthCheckPolicy",
		"listLoadBalancerRuleInstances",
		"updateLoadBalancerRule",
		"uploadSslCert",
		"deleteSslCert",
		"listSslCerts",
		"assignCertToLoadBalancer",
		"removeCertFromLoadBalancer",
		"addNetscalerLoadBalancer",
		"deleteNetscalerLoadBalancer",
		"configureNetscalerLoadBalancer",
		"listNetscalerLoadBalancers",
		"createGlobalLoadBalancerRule",
		"deleteGlobalLoadBalancerRule",
		"updateGlobalLoadBalancerRule",
		"listGlobalLoadBalancerRules",
		"assignToGlobalLoadBalancerRule",
		"removeFromGlobalLoadBalancerRule",
		"createLoadBalancer",
		"listLoadBalancers",
		"deleteLoadBalancer",
		"updateLoadBalancer",
	},
	"NetworkService": {
		"dedicatePublicIpRange",
		"releasePublicIpRange",
		"createNetwork",
		"deleteNetwork",
		"listNetworks",
		"restartNetwork",
		"updateNetwork",
		"createPhysicalNetwork",
		"deletePhysicalNetwork",
		"listPhysicalNetworks",
		"updatePhysicalNetwork",
		"listSupportedNetworkServices",
		"addNetworkServiceProvider",
		"deleteNetworkServiceProvider",
		"listNetworkServiceProviders",
		"updateNetworkServiceProvider",
		"createStorageNetworkIpRange",
		"deleteStorageNetworkIpRange",
		"listStorageNetworkIpRange",
		"updateStorageNetworkIpRange",
		"listPaloAltoFirewallNetworks",
		"listNetscalerLoadBalancerNetworks",
		"listNiciraNvpDeviceNetworks",
		"listNetworkIsolationMethods",
	},
	"VirtualMachineService": {
		"deployVirtualMachine",
		"destroyVirtualMachine",
		"rebootVirtualMachine",
		"startVirtualMachine",
		"stopVirtualMachine",
		"resetPasswordForVirtualMachine",
		"updateVirtualMachine",
		"listVirtualMachines",
		"getVMPassword",
		"restoreVirtualMachine",
		"changeServiceForVirtualMachine",
		"scaleVirtualMachine",
		"assignVirtualMachine",
		"migrateVirtualMachine",
		"migrateVirtualMachineWithVolume",
		"recoverVirtualMachine",
		"expungeVirtualMachine",
		"cleanVMReservations",
		"addNicToVirtualMachine",
		"removeNicFromVirtualMachine",
		"updateDefaultNicForVirtualMachine",
	},
	"VPNService": {
		"createRemoteAccessVpn",
		"deleteRemoteAccessVpn",
		"listRemoteAccessVpns",
		"updateRemoteAccessVpn",
		"addVpnUser",
		"removeVpnUser",
		"listVpnUsers",
		"createVpnCustomerGateway",
		"createVpnGateway",
		"createVpnConnection",
		"deleteVpnCustomerGateway",
		"deleteVpnGateway",
		"deleteVpnConnection",
		"updateVpnCustomerGateway",
		"resetVpnConnection",
		"listVpnCustomerGateways",
		"listVpnGateways",
		"listVpnConnections",
		"updateVpnConnection",
		"updateVpnGateway",
	},
	"AutoScaleService": {
		"createCounter",
		"createCondition",
		"createAutoScalePolicy",
		"createAutoScaleVmProfile",
		"createAutoScaleVmGroup",
		"deleteCounter",
		"deleteCondition",
		"deleteAutoScalePolicy",
		"deleteAutoScaleVmProfile",
		"deleteAutoScaleVmGroup",
		"listCounters",
		"listConditions",
		"listAutoScalePolicies",
		"listAutoScaleVmProfiles",
		"listAutoScaleVmGroups",
		"enableAutoScaleVmGroup",
		"disableAutoScaleVmGroup",
		"updateAutoScalePolicy",
		"updateAutoScaleVmProfile",
		"updateAutoScaleVmGroup",
	},
	"FirewallService": {
		"listPortForwardingRules",
		"createPortForwardingRule",
		"deletePortForwardingRule",
		"updatePortForwardingRule",
		"createFirewallRule",
		"deleteFirewallRule",
		"listFirewallRules",
		"updateFirewallRule",
		"createEgressFirewallRule",
		"deleteEgressFirewallRule",
		"listEgressFirewallRules",
		"updateEgressFirewallRule",
		"addPaloAltoFirewall",
		"deletePaloAltoFirewall",
		"configurePaloAltoFirewall",
		"listPaloAltoFirewalls",
	},
	"VPCService": {
		"createVPC",
		"listVPCs",
		"deleteVPC",
		"updateVPC",
		"restartVPC",
		"createVPCOffering",
		"updateVPCOffering",
		"deleteVPCOffering",
		"listVPCOfferings",
		"createPrivateGateway",
		"listPrivateGateways",
		"deletePrivateGateway",
		"createStaticRoute",
		"deleteStaticRoute",
		"listStaticRoutes",
	},
	"HostService": {
		"addHost",
		"reconnectHost",
		"updateHost",
		"deleteHost",
		"prepareHostForMaintenance",
		"cancelHostMaintenance",
		"listHosts",
		"findHostsForMigration",
		"addSecondaryStorage",
		"updateHostPassword",
		"releaseHostReservation",
		"addBaremetalHost",
		"dedicateHost",
		"releaseDedicatedHost",
		"listDedicatedHosts",
	},
	"UserService": {
		"createUser",
		"deleteUser",
		"updateUser",
		"listUsers",
		"lockUser",
		"disableUser",
		"enableUser",
		"getUser",
		"getVirtualMachineUseData",
		"registerUserKeys",
		"listLdapUsers",
		"importLdapUsers",
	},
	"UsageService": {
		"addTrafficType",
		"deleteTrafficType",
		"listTrafficTypes",
		"updateTrafficType",
		"listTrafficTypeImplementors",
		"generateUsageRecords",
		"listUsageRecords",
		"listUsageTypes",
		"addTrafficMonitor",
		"deleteTrafficMonitor",
		"listTrafficMonitors",
	},
	"TemplateService": {
		"createTemplate",
		"registerTemplate",
		"updateTemplate",
		"copyTemplate",
		"deleteTemplate",
		"listTemplates",
		"updateTemplatePermissions",
		"listTemplatePermissions",
		"extractTemplate",
		"prepareTemplate",
		"upgradeRouterTemplate",
	},
	"SnapshotService": {
		"createSnapshot",
		"listSnapshots",
		"deleteSnapshot",
		"createSnapshotPolicy",
		"deleteSnapshotPolicies",
		"listSnapshotPolicies",
		"revertSnapshot",
		"listVMSnapshot",
		"createVMSnapshot",
		"deleteVMSnapshot",
		"revertToVMSnapshot",
	},
	"AccountService": {
		"createAccount",
		"deleteAccount",
		"updateAccount",
		"disableAccount",
		"enableAccount",
		"lockAccount",
		"listAccounts",
		"markDefaultZoneForAccount",
		"addAccountToProject",
		"deleteAccountFromProject",
		"listProjectAccounts",
	},
	"VolumeService": {
		"attachVolume",
		"uploadVolume",
		"detachVolume",
		"createVolume",
		"deleteVolume",
		"listVolumes",
		"extractVolume",
		"migrateVolume",
		"resizeVolume",
		"updateVolume",
	},
	"ISOService": {
		"attachIso",
		"detachIso",
		"listIsos",
		"registerIso",
		"updateIso",
		"deleteIso",
		"copyIso",
		"updateIsoPermissions",
		"listIsoPermissions",
		"extractIso",
	},
	"RouterService": {
		"startRouter",
		"rebootRouter",
		"stopRouter",
		"destroyRouter",
		"changeServiceForRouter",
		"listRouters",
		"listVirtualRouterElements",
		"configureVirtualRouterElement",
		"createVirtualRouterElement",
	},
	"ProjectService": {
		"createProject",
		"deleteProject",
		"updateProject",
		"activateProject",
		"suspendProject",
		"listProjects",
		"listProjectInvitations",
		"updateProjectInvitation",
		"deleteProjectInvitation",
	},
	"NetworkACLService": {
		"createNetworkACL",
		"updateNetworkACLItem",
		"deleteNetworkACL",
		"listNetworkACLs",
		"createNetworkACLList",
		"deleteNetworkACLList",
		"replaceNetworkACLList",
		"listNetworkACLLists",
		"updateNetworkACLList",
	},
	"GuestOSService": {
		"listOsTypes",
		"listOsCategories",
		"addGuestOs",
		"updateGuestOs",
		"removeGuestOs",
		"listGuestOsMapping",
		"addGuestOsMapping",
		"updateGuestOsMapping",
		"removeGuestOsMapping",
	},
	"SystemVMService": {
		"startSystemVm",
		"rebootSystemVm",
		"stopSystemVm",
		"destroySystemVm",
		"listSystemVms",
		"migrateSystemVm",
		"changeServiceForSystemVm",
		"scaleSystemVm",
	},
	"ZoneService": {
		"createZone",
		"updateZone",
		"deleteZone",
		"listZones",
		"dedicateZone",
		"releaseDedicatedZone",
		"listDedicatedZones",
	},
	"SecurityGroupService": {
		"createSecurityGroup",
		"deleteSecurityGroup",
		"authorizeSecurityGroupIngress",
		"revokeSecurityGroupIngress",
		"authorizeSecurityGroupEgress",
		"revokeSecurityGroupEgress",
		"listSecurityGroups",
	},
	"PodService": {
		"createPod",
		"updatePod",
		"deletePod",
		"listPods",
		"dedicatePod",
		"releaseDedicatedPod",
		"listDedicatedPods",
	},
	"ImageStoreService": {
		"addImageStore",
		"listImageStores",
		"deleteImageStore",
		"createSecondaryStagingStore",
		"listSecondaryStagingStores",
		"deleteSecondaryStagingStore",
		"updateCloudToUseObjectStore",
	},
	"ConfigurationService": {
		"updateConfiguration",
		"listConfigurations",
		"listCapabilities",
		"listDeploymentPlanners",
		"listLdapConfigurations",
		"addLdapConfiguration",
		"deleteLdapConfiguration",
	},
	"ClusterService": {
		"addCluster",
		"deleteCluster",
		"updateCluster",
		"listClusters",
		"dedicateCluster",
		"releaseDedicatedCluster",
		"listDedicatedClusters",
	},
	"VLANService": {
		"createVlanIpRange",
		"deleteVlanIpRange",
		"listVlanIpRanges",
		"dedicateGuestVlanRange",
		"releaseDedicatedGuestVlanRange",
		"listDedicatedGuestVlanRanges",
	},
	"InternalLBService": {
		"configureInternalLoadBalancerElement",
		"createInternalLoadBalancerElement",
		"listInternalLoadBalancerElements",
		"stopInternalLoadBalancerVM",
		"startInternalLoadBalancerVM",
		"listInternalLoadBalancerVMs",
	},
	"UCSService": {
		"addUcsManager",
		"listUcsManagers",
		"listUcsProfiles",
		"listUcsBlades",
		"associateUcsProfileToBlade",
	},
	"SSHService": {
		"resetSSHKeyForVirtualMachine",
		"registerSSHKeyPair",
		"createSSHKeyPair",
		"deleteSSHKeyPair",
		"listSSHKeyPairs",
	},
	"PoolService": {
		"listStoragePools",
		"createStoragePool",
		"updateStoragePool",
		"deleteStoragePool",
		"findStoragePoolsForMigration",
	},
	"NATService": {
		"enableStaticNat",
		"createIpForwardingRule",
		"deleteIpForwardingRule",
		"listIpForwardingRules",
		"disableStaticNat",
	},
	"LimitService": {
		"updateResourceLimit",
		"updateResourceCount",
		"listResourceLimits",
		"getApiLimit",
		"resetApiLimit",
	},
	"DomainService": {
		"createDomain",
		"updateDomain",
		"deleteDomain",
		"listDomains",
		"listDomainChildren",
	},
	"BaremetalService": {
		"addBaremetalPxeKickStartServer",
		"addBaremetalPxePingServer",
		"addBaremetalDhcp",
		"listBaremetalDhcp",
		"listBaremetalPxeServers",
	},
	"AffinityGroupService": {
		"createAffinityGroup",
		"deleteAffinityGroup",
		"listAffinityGroups",
		"updateVMAffinityGroup",
		"listAffinityGroupTypes",
	},
	"VMGroupService": {
		"createInstanceGroup",
		"deleteInstanceGroup",
		"updateInstanceGroup",
		"listInstanceGroups",
	},
	"ServiceOfferingService": {
		"createServiceOffering",
		"deleteServiceOffering",
		"updateServiceOffering",
		"listServiceOfferings",
	},
	"RegionService": {
		"addRegion",
		"updateRegion",
		"removeRegion",
		"listRegions",
	},
	"NetworkOfferingService": {
		"createNetworkOffering",
		"updateNetworkOffering",
		"deleteNetworkOffering",
		"listNetworkOfferings",
	},
	"EventService": {
		"listEvents",
		"listEventTypes",
		"archiveEvents",
		"deleteEvents",
	},
	"DiskOfferingService": {
		"createDiskOffering",
		"updateDiskOffering",
		"deleteDiskOffering",
		"listDiskOfferings",
	},
	"AlertService": {
		"listAlerts",
		"archiveAlerts",
		"deleteAlerts",
		"generateAlert",
	},
	"AddressService": {
		"associateIpAddress",
		"disassociateIpAddress",
		"listPublicIpAddresses",
		"updateIpAddress",
	},
	"StoragePoolService": {
		"listStorageProviders",
		"enableStorageMaintenance",
		"cancelStorageMaintenance",
	},
	"ResourcetagsService": {
		"createTags",
		"deleteTags",
		"listTags",
	},
	"ResourcemetadataService": {
		"addResourceDetail",
		"removeResourceDetail",
		"listResourceDetails",
	},
	"PortableIPService": {
		"createPortableIpRange",
		"deletePortableIpRange",
		"listPortableIpRanges",
	},
	"NiciraNVPService": {
		"addNiciraNvpDevice",
		"deleteNiciraNvpDevice",
		"listNiciraNvpDevices",
	},
	"NicService": {
		"addIpToNic",
		"removeIpFromNic",
		"listNics",
	},
	"NetworkDeviceService": {
		"addNetworkDevice",
		"listNetworkDevice",
		"deleteNetworkDevice",
	},
	"HypervisorService": {
		"listHypervisors",
		"updateHypervisorCapabilities",
		"listHypervisorCapabilities",
	},
	"BigSwitchVNSService": {
		"addBigSwitchVnsDevice",
		"deleteBigSwitchVnsDevice",
		"listBigSwitchVnsDevices",
	},
	"SwiftService": {
		"addSwift",
		"listSwifts",
	},
	"S3Service": {
		"addS3",
		"listS3s",
	},
	"OvsElementService": {
		"configureOvsElement",
		"listOvsElements",
	},
	"AsyncjobService": {
		"queryAsyncJobResult",
		"listAsyncJobs",
	},
	"SystemCapacityService": {
		"listCapacity",
	},
	"LogoutService": {
		"logout",
	},
	"LoginService": {
		"login",
	},
	"LDAPService": {
		"ldapCreateAccount",
	},
	"CloudIdentifierService": {
		"getCloudIdentifier",
	},
	"CertificateService": {
		"uploadCustomCertificate",
	},
	"APIDiscoveryService": {
		"listApis",
	},
	"StratosphereSSPService": {
		"addStratosphereSsp",
	},
}
